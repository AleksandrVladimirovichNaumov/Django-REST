{"version":3,"sources":["components/User.js","components/Menu.js","components/Footer.js","components/Project.js","components/ToDo.js","components/NotFound.js","components/ProjectDetails.js","components/LoginForm.js","components/ToDoForm.js","components/ProjectForm.js","components/ProjectUpdateForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","username","first_name","last_name","email","UserList","users","map","MenuList","menu_items","Menu","i","length","push","to","FooterContent","footer_items","Footer","input_text","project_search_form","props","event","target","value","this","setState","console","log","preventDefault","React","Component","ProjectItem","project","delete_project","id","name","git_link","working_group","onClick","type","ProjectList","projects","project_search","onSubmit","handleSubmit","placeholder","onChange","handleChange","ToDoItem","todo","delete_todo","status","isActive","description","createDatetime","updateDatetime","createdBy","assignedTo","ToDoList","todos","NotFound","location","pathname","ProjectDetailsList","useParams","filtered_items","filter","LoginForm","state","login","password","get_token","className","ToDoForm","created_by","assigned_to","create_todo","item","ProjectForm","selectedOptions","create_project","multiple","ProjectUpdateForm","working_project_id","match","params","working_project","find","update_project","defaultValue","withRouter","App","headers","get_headers","axios","delete","then","response","load_data","catch","error","data","post","patch","is_active","project_name","token","Cookies","set","set_token","set_username","get","alert","is_auth","get_token_from_storage","get_username_from_storage","logout","exact","path","component","User","Project","ProjectDetails","ToDo","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f5df63b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserItem = ({user}) => {\n\n    return (\n        <tr>\n            <td>{user.username}</td>\n            <td>{user.first_name}</td>\n            <td>{user.last_name}</td>\n            <td>{user.email}</td>\n        </tr>\n    )\n}\n\nconst UserList = ({users}) => {\n\n    return (\n        <table>\n            <th>Username</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>Email</th>\n            {users.map((user) => <UserItem user={user}/>)}\n\n            <th>Username</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>Email</th>\n        </table>\n    )\n}\n\nexport default UserList;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport App from '../App';\n\n\n\nconst MenuList = ({menu_items}) => {\n    let Menu = [<p>Menu</p>]\n\n    // console.log(Menu.props)\n    for (let i = 0; i < menu_items.length; i++) {\n\n            Menu.push(<p><Link to={menu_items[i][1]}>{menu_items[i][0]}</Link></p>);\n\n        // Menu.push(<p><a href=\"#\">{menu_items[i]}</a></p>);\n    }\n    // console.log(Menu)\n    return (\n        Menu\n\n    )\n}\n\nexport default MenuList","import React from \"react\";\n\n\n\n\nconst FooterContent = ({footer_items}) => {\n    let Footer = []\n\n\n    for(let i = 0; i < footer_items.length; i++) {\n            Footer.push(<p>{footer_items[i]}</p>);\n            }\n\n    return (\n        Footer\n\n    )\n}\n\nexport default FooterContent","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nlet input_text = ''\n\nclass ProjectSearchForm extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleChange(event) {\n\n        input_text = event.target.value\n        this.setState(\n            {'project_name': input_text}\n        )\n        console.log(input_text)\n    }\n\n    handleSubmit(event) {\n        console.log(input_text)\n        console.log(this.props)\n        // this.props.project_search(input_text)\n        // this.props.create_todo(this.state.project_name)\n        event.preventDefault()\n    }\n}\n\nlet project_search_form = new ProjectSearchForm()\n\n\nconst ProjectItem = ({project, delete_project}) => {\n\n    return (\n        <tr>\n            <td>\n                <Link to={`/projects/update/${project.id}`}>{project.name}</Link>\n            </td>\n            <td>{project.git_link}</td>\n            <td>\n                <Link to={`/projects/details/${project.id}`}> {project.working_group.length} member(s)</Link>\n            </td>\n            <td>\n                <button onClick={() => delete_project(project.id)} type='button'>delete</button>\n            </td>\n\n\n        </tr>\n    )\n}\n\nconst ProjectList = ({projects, delete_project, project_search}) => {\n\n    return (\n\n        <p>\n            <form onSubmit={(event) => project_search_form.handleSubmit(event)}>\n                <input type=\"text\" name=\"project_name\"\n                       placeholder=\"project name\"\n                    // value={input_text}\n                       onChange={(event) => project_search_form.handleChange(event)}\n                />\n                <button onClick={() => project_search(input_text)} type='button'>search</button>\n                {/*<input type=\"submit\" value=\"Search project by name\"/>*/}\n            </form>\n\n\n            <table>\n                <th>Name</th>\n                <th>Git link</th>\n                <th>Members of working group</th>\n                <th>Delete</th>\n\n\n                {projects.map((project) => <ProjectItem project={project} delete_project={delete_project}/>)}\n\n                <th>Name</th>\n                <th>Git link</th>\n                <th>Members of working group</th>\n                <th>Delete</th>\n\n\n            </table>\n        </p>\n    )\n}\n\nexport default ProjectList;","import React from \"react\";\n\nconst ToDoItem = ({todo, delete_todo}) => {\n    let status = ''\n    if (todo.isActive) {\n        status = 'в работе'\n    } else {\n        status = 'завершен'\n    }\n    console.log(todo.project)\n    return (\n        <tr>\n            <td>{todo.name}</td>\n            <td>{todo.project}</td>\n            <td>{todo.description}</td>\n            <td>{todo.createDatetime}</td>\n            <td>{todo.updateDatetime}</td>\n            <td>{todo.createdBy}</td>\n            <td>{todo.assignedTo}</td>\n            <td>{status}</td>\n            <td>\n                <button onClick={() => delete_todo(todo.id)} type='button'>delete</button>\n            </td>\n\n\n        </tr>\n    )\n}\n\nconst ToDoList = ({todos, delete_todo}) => {\n\n    return (\n        <table>\n            <th>Name</th>\n            <th>Project</th>\n            <th>Description</th>\n            <th>Create_datetime</th>\n            <th>Update datetime</th>\n            <th>Created by</th>\n            <th>Assigned to</th>\n            <th>Is active</th>\n            <th>Delete</th>\n\n            {todos.map((todo) => <ToDoItem todo={todo} delete_todo={delete_todo}/>)}\n\n            <th>Name</th>\n            <th>Project</th>\n            <th>Description</th>\n            <th>Create_datetime</th>\n            <th>Update datetime</th>\n            <th>Created by</th>\n            <th>Assigned to</th>\n            <th>Is active</th>\n            <th>Delete</th>\n        </table>\n    )\n}\n\nexport default ToDoList;","\nconst NotFound = ({location})=>{\n    return(\n        <table>404: page {location.pathname} does not exist</table>\n    )\n}\n\nexport default NotFound","import {Link, useParams} from \"react-router-dom\";\nimport ProjectList from \"./Project\";\n\n\nconst ProjectItem = ({user}) => {\n    console.log(user)\n\n    let   working_group=\n            <tr>\n                <td>{user.username}</td>\n                <td>{user.email}</td>\n\n\n            </tr>\n\n\n    return (\n        working_group\n    )\n}\n\n\nconst ProjectDetailsList = ({projects, users}) => {\n\n    let {id} = useParams();\n    let working_group = [];\n    console.log(projects)\n\n    let filtered_items = projects.filter(project => project.id == id);\n    console.log(filtered_items)\n    for (let i=0; i<filtered_items[0].working_group.length; i++){\n        working_group.push(users.filter(user => user.id==filtered_items[0].working_group[i])[0])\n    }\n\n    console.log(working_group);\n    return (\n        <table>\n            <th>Username</th>\n            <th>Email</th>\n\n\n            {working_group.map((user) => <ProjectItem user = {user}/>)}\n\n            <th>Username</th>\n            <th>Email</th>\n\n        </table>\n    )\n\n\n}\n\nexport default ProjectDetailsList;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n            password: '',\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    handleSubmit(event) {\n        this.props.get_token(this.state.login, this.state.password)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"div2\">\n                        <span>\n                    <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\n                           onChange={(event) => this.handleChange(event)}/>\n\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\n                           onChange={(event) => this.handleChange(event)}/>\n                    <input type=\"submit\" value=\"Login\"/>\n                    </span>\n                </div>\n            </form>\n\n        )\n    }\n\n\n}\n\nexport default LoginForm","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass ToDoForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            project: 2,\n            description: '',\n            created_by: 1,\n            assigned_to: 1,\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n        console.log(event.target.value)\n    }\n\n    handleSubmit(event) {\n        // this.state.create_datetime = Date()\n        // this.state.update_datetime = Date()\n        this.props.create_todo(this.state.name, this.state.description, this.state.project, this.state.created_by, this.state.assigned_to)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"div2\">\n                    <p>Create new Todo:</p>\n\n                    <p>Todo Name<br/>\n                        <input type=\"text\" name=\"name\" placeholder=\"ToDo name\" value={this.state.name}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </p>\n\n                    <p>Description<br/>\n                        <input type=\"text\" name=\"description\"\n                               placeholder=\"Description\"\n                               value={this.state.description}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </p>\n\n                    <p>Project<br/>\n                        <select name=\"project\"\n\n\n                                onChange={(event) => this.handleChange(event)}>\n                            {this.props.projects.map((item) =>\n                                <option value={item.id}> {item.name}\n\n                                </option>)}\n                        </select>\n                    </p>\n\n                    <p>Assigned to<br/>\n                        <select name=\"assigned_to\"\n\n\n                                onChange={(event) => this.handleChange(event)}>\n                            {this.props.users.map((item) =>\n                                <option value={item.id}> {item.username}\n\n                                </option>)}\n                            {console.log(this.props.users               )}\n\n                        </select>\n                    </p>\n\n                    <p>Created by<br/>\n                        <select name=\"created_by\"\n\n\n                                onChange={(event) => this.handleChange(event)}>\n                            {this.props.users.map((item) =>\n                                <option value={item.id}> {item.username}\n\n                                </option>)}\n\n                        </select>\n                    </p>\n\n\n                    <p><input type=\"submit\" value=\"Save\"/></p>\n\n                </div>\n            </form>\n\n        )\n    }\n\n\n}\n\nexport default ToDoForm","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            git_link: '',\n            working_group: [],\n        }\n    }\n\n    handleChange(event) {\n        if (event.target.name === 'working_group') {\n            let working_group = []\n            for (let i = 0; i<event.target.selectedOptions.length; i++) {\n                working_group.push(event.target.selectedOptions.item(i).value)\n\n                this.setState(\n                    {\n                        [event.target.name]: working_group\n                    }\n                )\n            }\n        } else {\n            this.setState(\n                {\n                    [event.target.name]: event.target.value\n                }\n            )\n        }\n        console.log(event.target.name)\n        console.log(event.target.value)\n\n    }\n\n    handleSubmit(event) {\n        // this.state.create_datetime = Date()\n        // this.state.update_datetime = Date()\n        console.log(this.state.name)\n        console.log(this.state.git_link)\n        console.log(this.state.working_group)\n\n\n        this.props.create_project(this.state.name, this.state.git_link, this.state.working_group)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"div2\">\n                    <p>Create new Project:</p>\n\n                    <p>Todo Name<br/>\n                        <input type=\"text\" name=\"name\" placeholder=\"ToDo name\" value={this.state.name}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </p>\n\n                    <p>Git link<br/>\n                        <input type=\"text\" name=\"git_link\"\n                               placeholder=\"Git link\"\n                               value={this.state.description}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </p>\n\n                    <p>Working group<br/>\n                        <select name=\"working_group\" multiple\n\n\n                                onChange={(event) => this.handleChange(event)}>\n                            {this.props.users.map((item) =>\n                                <option value={item.id}> {item.username}\n\n                                </option>)}\n\n                        </select>\n                    </p>\n\n\n                    <p><input type=\"submit\" value=\"Save\"/></p>\n\n                </div>\n            </form>\n\n        )\n    }\n\n\n}\n\nexport default ProjectForm","import React from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {withRouter} from \"react-router\";\n\n\nclass ProjectUpdateForm extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n        console.log(props.projects)\n        const working_project_id = this.props.match.params.id\n        console.log(working_project_id)\n        let working_project = props.projects.find(project => {\n            return project.id == working_project_id\n        })\n        console.log(working_project)\n\n        this.state = {\n            name: working_project.name,\n            git_link: working_project.git_link,\n            working_group: working_project.working_group,\n            id: working_project.id\n        }\n    }\n\n    handleChange(event) {\n        if (event.target.name === 'working_group') {\n            let working_group = []\n            for (let i = 0; i < event.target.selectedOptions.length; i++) {\n                working_group.push(event.target.selectedOptions.item(i).value)\n\n                this.setState(\n                    {\n                        [event.target.name]: working_group\n                    }\n                )\n            }\n        } else {\n            this.setState(\n                {\n                    [event.target.name]: event.target.value\n                }\n            )\n        }\n        console.log(event.target.name)\n        console.log(event.target.value)\n\n    }\n\n    handleSubmit(event) {\n        // this.state.create_datetime = Date()\n        // this.state.update_datetime = Date()\n        console.log(this.state.name)\n        console.log(this.state.git_link)\n        console.log(this.state.working_group)\n\n\n        this.props.update_project(this.state.id, this.state.name, this.state.git_link, this.state.working_group)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"div2\">\n                    <p>Create new Project:</p>\n\n                    <p>Todo Name<br/>\n                        <input type=\"text\" name=\"name\" placeholder=\"ToDo name\" value={this.state.name}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </p>\n\n                    <p>Git link<br/>\n                        <input type=\"text\" name=\"git_link\"\n                               placeholder=\"Git link\"\n                               value={this.state.git_link}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </p>\n\n                    <p>Working group<br/>\n                        <select name=\"working_group\"\n                                multiple\n                                defaultValue={this.state.working_group}\n                                onChange={(event) => this.handleChange(event)}>\n                            {this.props.users.map((item) =>\n                                <option value={item.id}> {item.username}\n\n                                </option>)}\n\n                        </select>\n                    </p>\n\n\n                    <p><input type=\"submit\" value=\"Update\"/></p>\n\n                </div>\n            </form>\n\n        )\n    }\n\n\n}\n\nexport default withRouter(ProjectUpdateForm);","import React from 'react';\nimport './App.css';\nimport UserList from \"./components/User\";\nimport MenuList from \"./components/Menu\";\nimport FooterContent from \"./components/Footer\";\nimport axios from \"axios\";\nimport {BrowserRouter, HashRouter, Route, Router, Routes, Link, Switch, Redirect} from \"react-router-dom\";\nimport ProjectList from \"./components/Project\";\nimport ToDoList from \"./components/ToDo\";\nimport NotFound from \"./components/NotFound\";\nimport ProjectDetailsList from \"./components/ProjectDetails\";\nimport LoginForm from \"./components/LoginForm\";\nimport Cookies from \"universal-cookie/lib\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport ProjectUpdateForm from \"./components/ProjectUpdateForm\";\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'users': [],\n            'menu_items': [\n                ['Users', '/users'],\n                ['Projects', '/projects'],\n                ['ToDos', '/todos'],\n                ['Create project', '/projects/create'],\n                ['Create ToDo', '/todos/create'],\n            ],\n            'footer_items': ['TODO ltd.', '2021'],\n            'projects': [],\n            'todos': [],\n            'token': '',\n            'username': '',\n            'todo_project': {}\n        }\n    }\n\n    delete_project(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/projects/${id}`, {headers}).then(\n            response => {\n                this.load_data();\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({'projects': []})\n        })\n    }\n\n    create_project(name, git_link, working_group) {\n        const headers = this.get_headers()\n\n        const data = {\n            name: name,\n            git_link: git_link,\n            working_group: working_group,\n\n        }\n\n\n        axios.post(`http://127.0.0.1:8000/api/projects/`, data, {headers}).then(\n            response => {\n                this.load_data();\n            }\n        ).catch(error => {\n            console.log(error)\n\n        })\n\n    }\n\n        update_project(id, name, git_link, working_group) {\n        const headers = this.get_headers()\n\n        const data = {\n            name: name,\n            git_link: git_link,\n            working_group: working_group,\n\n        }\n\n\n        axios.patch(`http://127.0.0.1:8000/api/projects/${id}/`, data, {headers}).then(\n            response => {\n                this.load_data();\n            }\n        ).catch(error => {\n            console.log(error)\n\n        })\n\n    }\n\n    delete_todo(id) {\n        const headers = this.get_headers()\n\n        axios.delete(`http://127.0.0.1:8000/api/todos/${id}`, {headers}).then(\n            response => {\n                this.load_data();\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({'projects': []})\n        })\n    }\n\n\n\n    create_todo(name, description, project, created_by, assigned_to) {\n        const headers = this.get_headers()\n\n        //  с добавленными в сериалайзере\n        // project = ProjectModelSerializer()\n\n        // не получается отправить пост запрос на создание todo? так как включена информация ввиде объекта project\n        // я пытался отправлять запрос для получения объекта с инфой о проджекте и после получения ответа отправлять\n        // пост запрос на создание туду с включенным объектом проекта. получаю ошибку, хотя структура data в пост запросе такая же\n        // как и при гет запросе туду. почему - не смог разобраться. ниже код\n\n        // axios.get('http://127.0.0.1:8000/api/projects/1', {headers}).then(\n        //     response => {\n        //         const project = response.data\n        //         console.log(project)\n        //         this.setState(\n        //             {\n        //                 'todo_project': project\n        //             }\n        //         )\n        //\n        //\n        //         const data = {\n        //             name: name,\n        //             project: this.state.todo_project,\n        //             description: description,\n        //             // create_datetime: Date(),\n        //             // update_datetime: Date(),\n        //             created_by: 1,\n        //             assigned_to: 1,\n        //             is_active: true,\n        //         }\n        //         console.log(data)\n        //\n        //         axios.post(`http://127.0.0.1:8000/api/todos/`, data, {headers}).then(\n        //             response => {\n        //                 this.load_data();\n        //             }\n        //         ).catch(error => {\n        //             console.log(error)\n        //             this.setState({'projects': []})\n        //         })\n        //\n        //\n        //     })\n        const data = {\n            name: name,\n            project: project,\n            description: description,\n            // create_datetime: Date(),\n            // update_datetime: Date(),\n            created_by: created_by,\n            assigned_to: assigned_to,\n            is_active: true,\n        }\n\n\n        axios.post(`http://127.0.0.1:8000/api/todos/`, data, {headers}).then(\n            response => {\n                this.load_data();\n            }\n        ).catch(error => {\n            console.log(error)\n\n        })\n\n    }\n\n    project_search(project_name){\n        this.load_data(project_name)\n    }\n\n    set_token(token) {\n        const cookie = new Cookies()\n        cookie.set('token', token)\n        this.setState({'token': token}, () => this.load_data())\n    }\n\n    set_username(username) {\n        const cookie = new Cookies()\n        cookie.set('username', username)\n        this.setState({'username': username}, () => this.load_data())\n    }\n\n    is_auth() {\n        return !!this.state.token\n    }\n\n    logout() {\n        this.set_token('')\n        this.set_username('')\n\n\n    }\n\n    load_data(project_search='') {\n        const headers = this.get_headers()\n        axios.get('http://127.0.0.1:8000/api/users/', {headers}).then(\n            response => {\n                const users = response.data\n\n                this.setState(\n                    {\n                        'users': users\n                    }\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({'users': []})\n        })\n        if(project_search==='') {\n            axios.get('http://127.0.0.1:8000/api/projects/', {headers}).then(\n                response => {\n\n                    const projects = response.data\n\n\n                    this.setState(\n                        {\n                            'projects': projects\n                        }\n                    )\n                }\n            ).catch(error => {\n                console.log(error);\n                this.setState({'projects': []})\n            })\n        }else{\n            axios.get(`http://127.0.0.1:8000/filters/project_name/?project_name=${project_search}`, {headers}).then(\n                response => {\n\n                    const projects = response.data\n\n\n                    this.setState(\n                        {\n                            'projects': projects\n                        }\n                    )\n                }\n            ).catch(error => {\n                console.log(error);\n                this.setState({'projects': []})\n            })\n        }\n        axios.get('http://127.0.0.1:8000/api/todos/', {headers}).then(\n            response => {\n\n                const todos = response.data\n\n                this.setState(\n                    {\n                        'todos': todos\n                    }\n                )\n            }\n        ).catch(error => {\n            console.log(error);\n            this.setState({'todos': []})\n        })\n    }\n\n    get_token_from_storage() {\n        const cookie = new Cookies()\n        let token = cookie.get('token')\n        this.setState({'token': token}, () => this.load_data())\n    }\n\n    get_username_from_storage() {\n        const cookie = new Cookies()\n        let username = cookie.get('username')\n        this.setState({'username': username}, () => this.load_data())\n    }\n\n    get_token(username, password) {\n\n        this.setState({'username': username}, () => this.load_data())\n        let data;\n        data = {\n            username: username,\n            password: password\n        }\n        axios.post('http://127.0.0.1:8000/api-token-auth/', data).then(\n            response => {\n                this.set_token(response.data['token'])\n                this.set_username(username)\n\n            }\n        ).catch(error => alert(error))\n    }\n\n    get_headers() {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        if (this.is_auth()) {\n            headers['Authorization'] = 'Token ' + this.state.token\n        }\n        return headers\n    }\n\n    componentDidMount() {\n        this.get_token_from_storage()\n        this.get_username_from_storage()\n\n\n    }\n\n    render() {\n        return (\n\n            <div className=\"parent\">\n                <BrowserRouter>\n                    <div className=\"div1\">\n                        <p>TODO:</p>\n                    </div>\n                    <div className=\"div2\">\n                        <span>\n                            {this.is_auth()\n                                ? <p>\n                                    {this.state.username}<br/>\n                                    <button onClick={() => this.logout()}>Logout</button>\n                                </p>\n                                : <p><Link to='/login'>Login</Link></p>}\n                            <br/>\n                            <MenuList menu_items={this.state.menu_items}/>\n\n\n                        </span>\n                    </div>\n                    <div className=\"div3\">\n                        <span>\n\n\n                            <Switch>\n                                <Route exact path='/users' component={() => <UserList users={this.state.users}/>}/>\n\n\n                                <Route exact path='/projects'\n                                       component={() => <ProjectList projects={this.state.projects}\n                                                                     delete_project={(id) => this.delete_project(id)}\n                                                                     project_search={(project_name) => this.load_data(project_name)}/>}/>\n\n                                <Route exact path='/projects/create' component={() =>\n                                    <ProjectForm\n                                        projects={this.state.projects}\n                                        users={this.state.users}\n                                        create_project={(name, git_link, working_group) => this.create_project(name, git_link, working_group)}/>}/>\n\n                                <Route path='/projects/details/:id'>\n                                    <ProjectDetailsList projects={this.state.projects} users={this.state.users}/>\n                                </Route>\n\n                                <Route exact path='/projects/update/:id' component={() =>\n                                    <ProjectUpdateForm\n                                        projects={this.state.projects}\n                                        users={this.state.users}\n                                        update_project={(id, name, git_link, working_group) => this.update_project(id, name, git_link, working_group)}/>}/>\n\n\n\n\n                                <Route exact path='/todos'\n                                       component={() => <ToDoList todos={this.state.todos}\n                                                                  delete_todo={(id) => this.delete_todo(id)}/>}/>\n\n                                <Route exact path='/todos/create' component={() =>\n                                    <ToDoForm\n                                        projects={this.state.projects}\n                                        users={this.state.users}\n                                        create_todo={(name, description, project, created_by, assigned_to) => this.create_todo(name, description, project, created_by, assigned_to)}/>}/>\n\n\n                                {!this.is_auth()\n                                    ? <Route exact path='/login' component={() => <LoginForm\n                                        get_token={(username, password) => this.get_token(username, password)}/>}/>\n                                    :\n                                    <div className=\"div2\"><span> You are logged as {this.state['username']}</span></div>\n                                }\n\n                                <Redirect from='/' to='/users'/>\n\n                                <Route component={NotFound}/>\n                            </Switch>\n\n                                    </span>\n\n                    </div>\n                    <div className=\"div4\">\n                        <FooterContent footer_items={this.state.footer_items}/>\n                    </div>\n                </BrowserRouter>\n            </div>\n\n\n        )\n            ;\n    }\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}